-- actually type it this line inâ€¦ loadPackage "RevEng"
needsPackage "Points"

getGB = method(TypicalValue => BasicList) 
getGB(FunctionData, List) := (FD, L) -> (
    kk:= coefficientRing ring first L;
    m := matrix keys FD;
    cols := apply(L, v-> index v);
    V := submatrix(m, cols);
    R := kk[L];
    (SM, LT, GB) := points(transpose V, R);
    GB)

-------
p = 2;			
n = 3;
			
WT = {"1.txt", "2.txt", "3.txt", "4.txt", "5.txt", "6.txt", "7.txt", "8.txt"};  	
KO = {};		
K = ZZ/p;
R = K[makeVars n, MonomialOrder=> Lex]; 	--change monomial order	

S = subsets WT;
S = select(S, s->#s>1);
--S = select(S, s->#s==3);			--just for testing

--how to write a loop that can pick up S_i from S?
file1 = openOut "dataResults";
file1 <<"dataSet\t"
file1 <<"GrobnerBasis\t";
file1 <<"F1\t";
file1 <<"F2\t";
file1 <<"F3" <<endl;
							
apply(S,s->(
	T=readTSData (s,KO,K); 			--#elements = 2^(#DS) e.g. 2^8= 256
	file1 <<toString(s) <<"\t";	
	apply(n, i->(
    		data = functionData(T, i+1);
    		f = findFunction(data, gens R);	
    		G = getGB(data, gens R); 		
    		G = apply(G, g->sub(g, R));
    		F = f % gb ideal G;
		if i==0 then (
			file1 <<toString(G) <<"\t";		
			file1 <<toString(F) <<"\t"; 
		) else if i==1 then (file1 <<toString(F) <<"\t")
		else (file1 <<toString(F) <<endl);
		)); 
	))	
file1 << close;
